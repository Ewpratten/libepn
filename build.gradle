plugins {
    id 'java-library'
    id 'maven'
    id 'maven-publish'
}

apply from: "./simpleunittest.gradle"

project.version = "1.0.0"

repositories {
    jcenter()
}

dependencies {
    
    // Math lib containing Quaternions
    api 'org.apache.commons:commons-math3:3.6.1'

    // Matrix library
    compile group: 'org.ejml', name: 'ejml-simple', version: '0.39'
    compile group: 'org.ejml', name: 'ejml-all', version: '0.39'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'

}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/ewpratten/libepn")
            credentials {
                username = project.findProperty("gh_user") ?: System.getenv("GHP_USERNAME")
                password = project.findProperty("gh_packages_token") ?: System.getenv("GHP_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            groupId = 'ca.retrylife'
            artifactId = 'libepn'
            version = project.version

            from components.java

        }
    }
}

task javadocCustom(type: Javadoc, description: 'Generate javadocs from all child projects as if it was a single project', group: 'Documentation'){
    title = "$project.name $version API"
    options.addBooleanOption('-no-module-directories', true)
	options.author true

    options.links 'http://docs.spring.io/spring/docs/4.3.x/javadoc-api/', 'http://docs.oracle.com/javase/8/docs/api/', 'http://docs.spring.io/spring-ws/docs/2.3.0.RELEASE/api/', 'http://docs.spring.io/spring-security/site/docs/4.0.4.RELEASE/apidocs/', 'https://commons.apache.org/proper/commons-math/javadocs/api-3.4/', 'http://ejml.org/javadoc/'
    
    options.addStringOption 'Xdoclint:none', '-quiet'

    project.tasks.withType(Javadoc).each { javadocTask ->
      
        // Add the task sources to the main JavaDoc
        source += javadocTask.source
        classpath += javadocTask.classpath
        excludes += javadocTask.excludes
        includes += javadocTask.includes

    }

    destinationDir = file("$buildDir/docs/javadoc")

}

task buildRelease(type: Jar){

    dependsOn build
    dependsOn javadocCustom

    from file("build/docs/javadoc/"), { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }, sourceSets.main.allSource

}